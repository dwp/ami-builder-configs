resources:
  - name: aws-management-infrastructure
    type: git
    source:
      branch: master
      uri: https://((dataworks.enterprise_github_url))/dip/aws-management-infrastructure.git
      username: ((dataworks.enterprise_github_username))
      password: ((dataworks-secrets.enterprise_github_pat))
    check_every: 720h
    webhook_token: ((dataworks.concourse_github_webhook_token))

  - name: dataworks-aws-ingestion-ecs-cluster
    type: git
    source:
      branch: master
      uri: https://github.com/dwp/dataworks-aws-ingestion-ecs-cluster.git
      access_token: ((dataworks-secrets.concourse_github_pat))
    webhook_token: ((dataworks.concourse_github_webhook_token))
    check_every: 5m

  - name: aws-ingestion
    type: git
    source:
      branch: master
      uri: https://github.com/dwp/aws-ingestion.git
      access_token: ((dataworks-secrets.concourse_github_pat))
    webhook_token: ((dataworks.concourse_github_webhook_token))
    check_every: 5m

  - name: dw-al2-base-ami-template
    .: (( inject meta.resources.ami-builder-configs ))
    source:
      paths:
        - generic_packer_template.json.j2

  - name: dw-al2-base-ami-arm-template
    .: (( inject meta.resources.ami-builder-configs ))
    source:
      paths:
        - generic_packer_arm_template.json.j2

  - name: amzn2-ami-hvm
    type: ami
    check_every: 5m
    source:
      aws_role_arn: arn:aws:iam::((dataworks.aws_management_acc)):role/ci
      region: ((dataworks.aws_region))
      filters:
        is-public: true
        state: available
        name: amzn2-ami-hvm-*
        architecture: x86_64

  - name: amzn2-ami-hvm-arm
    type: ami
    check_every: 5m
    source:
      aws_role_arn: arn:aws:iam::((dataworks.aws_management_acc)):role/ci
      region: ((dataworks.aws_region))
      filters:
        is-public: true
        state: available
        name: amzn2-ami-hvm-*
        architecture: arm64

  - name: dw-al2-base-ami
    type: ami
    check_every: 5m
    source:
      aws_role_arn: arn:aws:iam::((dataworks.aws_management_acc)):role/ci
      region: ((dataworks.aws_region))
      filters:
        owner-id: ((dataworks.aws_management_acc))
        is-public: false
        state: available
        name: dw-al2-base-ami-*

  - name: dw-al2-base-ami-arm
    type: ami
    check_every: 5m
    source:
      aws_role_arn: arn:aws:iam::((dataworks.aws_management_acc)):role/ci
      region: ((dataworks.aws_region))
      filters:
        owner-id: ((dataworks.aws_management_acc))
        is-public: false
        state: available
        name: dw-al2-base-ami-arm-*

  - name: dw-al2-untested-hardened-ami
    type: ami
    check_every: 5m
    source:
      aws_role_arn: arn:aws:iam::((dataworks.aws_management_acc)):role/ci
      region: ((dataworks.aws_region))
      filters:
        owner-id: ((dataworks.aws_management_acc))
        is-public: false
        state: available
        name: dw-al2-untested-hardened-ami-*

  - name: dw-al2-untested-hardened-ami-arm
    type: ami
    check_every: 5m
    source:
      aws_role_arn: arn:aws:iam::((dataworks.aws_management_acc)):role/ci
      region: ((dataworks.aws_region))
      filters:
        owner-id: ((dataworks.aws_management_acc))
        is-public: false
        state: available
        name: dw-al2-untested-hardened-ami-arm-*

  - name: dw-al2-hardened-ami
    type: ami
    check_every: 5m
    source:
      aws_role_arn: arn:aws:iam::((dataworks.aws_management_acc)):role/ci
      region: ((dataworks.aws_region))
      filters:
        owner-id: ((dataworks.aws_management_acc))
        is-public: false
        state: available
        name: dw-al2-hardened-ami-*

  - name: dw-al2-hardened-ami-arm
    type: ami
    check_every: 5m
    source:
      aws_role_arn: arn:aws:iam::((dataworks.aws_management_acc)):role/ci
      region: ((dataworks.aws_region))
      filters:
        owner-id: ((dataworks.aws_management_acc))
        is-public: false
        state: available
        name: dw-al2-hardened-ami-arm-*]

  - name: dataworks-behavioural-framework
    type: git
    source:
      branch: master
      uri: https://github.com/dwp/dataworks-behavioural-framework.git
      access_token: ((dataworks-secrets.concourse_github_pat))
    webhook_token: ((dataworks.concourse_github_webhook_token))
    check_every: 5m

  - name: dw-al2-untested-ecs-ami
    type: ami
    check_every: 5m
    source:
      aws_role_arn: arn:aws:iam::((dataworks.aws_management_acc)):role/ci
      region: ((dataworks.aws_region))
      filters:
        owner-id: ((dataworks.aws_management_acc))
        is-public: false
        state: available
        name: dw-al2-untested-ecs-ami-*
        architecture: x86_64

  - name: aws-security-tools
    type: git
    source:
      branch: master
      uri: https://((dataworks.enterprise_github_url))/dip/aws-security-tools.git
      username: ((dataworks.enterprise_github_username))
      password: ((dataworks-secrets.enterprise_github_pat))
    check_every: 720h
    webhook_token: ((dataworks.concourse_github_webhook_token))

  - name: concourse-release
    type: github-release
    source:
      owner: concourse
      repository: concourse
      access_token: ((dataworks-secrets.concourse_github_pat))
    check_every: 1h

  - name: weekly-wednesday
    source:
      start: 3:00 AM
      stop: 4:00 AM
      days: [Wednesday]
    type: time

  - name: slack
    type: slack-notification
    source:
      url: ((dataworks.slack_webhook_url))
