resources:
  - name: aws-management-infrastructure
    type: git
    source:
      branch: master
      uri: https://((dataworks.enterprise_github_url))/dip/aws-management-infrastructure.git
      username: ((dataworks.enterprise_github_username))
      password: ((dataworks-secrets.enterprise_github_pat))
    check_every: 5m
    webhook_token: ((dataworks.concourse_github_webhook_token))

  - name: dw-al2-base-ami-template
    .: (( inject meta.resources.ami-builder-configs ))
    source:
      paths:
        - generic_packer_template.json.j2

  - name: ami-builder-configs-update-pipeline
    .: (( inject meta.resources.ami-builder-configs ))
    source:
      paths:
        - ci/*
        - aviator.yml

  - name: dw-al2-base-ami-arm-template
    .: (( inject meta.resources.ami-builder-configs ))
    source:
      paths:
        - generic_packer_arm_template.json.j2

  - name: amzn2-ami-hvm
    type: ami
    check_every: 5m
    source:
      aws_role_arn: arn:aws:iam::((dataworks.aws_management_acc)):role/ci
      region: ((dataworks.aws_region))
      filters:
        is-public: true
        state: available
        name: amzn2-ami-hvm-*
        architecture: x86_64

  - name: amzn2-ami-hvm-arm
    type: ami
    check_every: 5m
    source:
      aws_role_arn: arn:aws:iam::((dataworks.aws_management_acc)):role/ci
      region: ((dataworks.aws_region))
      filters:
        is-public: true
        state: available
        name: amzn2-ami-hvm-*
        architecture: arm64

  - name: dw-al2-base-ami
    type: ami
    check_every: 5m
    source:
      aws_role_arn: arn:aws:iam::((dataworks.aws_management_acc)):role/ci
      region: ((dataworks.aws_region))
      filters:
        owner-id: ((dataworks.aws_management_acc))
        is-public: false
        state: available
        name: dw-al2-base-ami-*

  - name: dw-al2-base-ami-arm
    type: ami
    check_every: 5m
    source:
      aws_role_arn: arn:aws:iam::((dataworks.aws_management_acc)):role/ci
      region: ((dataworks.aws_region))
      filters:
        owner-id: ((dataworks.aws_management_acc))
        is-public: false
        state: available
        name: dw-al2-base-ami-arm-*

  - name: dw-al2-untested-hardened-ami
    type: ami
    check_every: 5m
    source:
      aws_role_arn: arn:aws:iam::((dataworks.aws_management_acc)):role/ci
      region: ((dataworks.aws_region))
      filters:
        owner-id: ((dataworks.aws_management_acc))
        is-public: false
        state: available
        name: dw-al2-untested-hardened-ami-*

  - name: dw-al2-untested-hardened-ami-arm
    type: ami
    check_every: 5m
    source:
      aws_role_arn: arn:aws:iam::((dataworks.aws_management_acc)):role/ci
      region: ((dataworks.aws_region))
      filters:
        owner-id: ((dataworks.aws_management_acc))
        is-public: false
        state: available
        name: dw-al2-untested-hardened-ami-arm-*

  - name: dw-al2-hardened-ami
    type: ami
    check_every: 5m
    source:
      aws_role_arn: arn:aws:iam::((dataworks.aws_management_acc)):role/ci
      region: ((dataworks.aws_region))
      filters:
        owner-id: ((dataworks.aws_management_acc))
        is-public: false
        state: available
        name: dw-al2-hardened-ami-*

  - name: dw-al2-hardened-ami-arm
    type: ami
    check_every: 5m
    source:
      aws_role_arn: arn:aws:iam::((dataworks.aws_management_acc)):role/ci
      region: ((dataworks.aws_region))
      filters:
        owner-id: ((dataworks.aws_management_acc))
        is-public: false
        state: available
        name: dw-al2-hardened-ami-arm-*

  - name: aws-security-tools
    type: git
    source:
      branch: master
      uri: https://((dataworks.enterprise_github_url))/dip/aws-security-tools.git
      username: ((dataworks.enterprise_github_username))
      password: ((dataworks-secrets.enterprise_github_pat))
    check_every: 5m
    webhook_token: ((dataworks.concourse_github_webhook_token))

  - name: dw-al2-emr-ami-config
    .: (( inject meta.resources.ami-builder-configs ))
    source:
      paths:
        - dw-al2-emr-ami/*
        - ci/infra/jobs/build_amis/dw-al2-emr-ami.yml

  - name: dw-al2-emr-ami-pr
    .: (( inject meta.resources.ami-builder-configs-pr ))
    source:
      paths:
        - dw-al2-emr-ami/*
        - ci/infra/jobs/build_amis/dw-al2-emr-ami.yml

  - name: dw-al2-emr-ami-arm-config
    .: (( inject meta.resources.ami-builder-configs ))
    source:
      paths:
        - dw-al2-emr-ami/*
        - ci/infra/jobs/build_amis/dw-al2-emr-ami-arm.yml

  - name: dw-al2-hbase-ami-config
    .: (( inject meta.resources.ami-builder-configs ))
    source:
      paths:
        - dw-al2-hbase-ami/*
        - ci/infra/jobs/build_amis/dw-al2-hbase-ami.yml

  - name: dw-al2-hbase-ami-pr
    .: (( inject meta.resources.ami-builder-configs-pr ))
    source:
      paths:
        - dw-al2-hbase-ami/*
        - ci/infra/jobs/build_amis/dw-al2-hbase-ami.yml

  - name: dw-al2-hbase-ami-arm-config
    .: (( inject meta.resources.ami-builder-configs ))
    source:
      paths:
        - dw-al2-hbase-ami/*
        - ci/infra/jobs/build_amis/dw-al2-hbase-ami-arm.yml

  - name: analytical-dataset-generation
    .: (( inject meta.resources.ami-builder-configs ))
    source:
      paths:
        - results/analytical-dataset-generation.test

  - name: aws-mongo-latest
    .: (( inject meta.resources.ami-builder-configs ))
    source:
      paths:
        - results/aws-mongo-latest.test

  - name: pdm-dataset-generation
    .: (( inject meta.resources.ami-builder-configs ))
    source:
      paths:
        - results/pdm-dataset-generation.test

  - name: aws-clive
    .: (( inject meta.resources.ami-builder-configs ))
    source:
      paths:
        - results/aws-clive.test

  - name: analytical-env
    .: (( inject meta.resources.ami-builder-configs ))
    source:
      paths:
        - results/analytical-env.test

  - name: aws-internal-compute
    .: (( inject meta.resources.ami-builder-configs ))
    source:
      paths:
        - results/aws-internal-compute.test
  - name: dw-al2-hardened-ami-config
    .: (( inject meta.resources.ami-builder-configs ))
    source:
      paths:
        - dw-al2-hardened-ami/*
        - ci/infra/jobs/build_amis/dw-al2-hardened-ami.yml

  - name: dw-al2-hardened-ami-pr
    .: (( inject meta.resources.ami-builder-configs-pr ))
    source:
      paths:
        - dw-al2-hardened-ami/*
        - ci/infra/jobs/build_amis/dw-al2-hardened-ami.yml

  - name: dw-al2-base-ami-config
    .: (( inject meta.resources.ami-builder-configs ))
    source:
      paths:
        - dw-al2-base-ami/*
        - ci/infra/jobs/build_amis/dw-al2-base-ami.yml

  - name: dw-al2-base-ami-pr
    .: (( inject meta.resources.ami-builder-configs-pr ))
    source:
      paths:
        - dw-al2-base-ami/*
        - generic_packer_template.json.j2
        - ci/infra/jobs/build_amis/dw-al2-base-ami.yml

  - name: dw-al2-base-ami-arm-config
    .: (( inject meta.resources.ami-builder-configs ))
    source:
      paths:
        - dw-al2-base-ami/*
        - ci/infra/jobs/build_amis/dw-al2-base-ami-arm.yml

  - name: dw-al2-base-ami-arm-pr
    .: (( inject meta.resources.ami-builder-configs-pr ))
    source:
      paths:
        - dw-al2-base-ami/*
        - generic_packer_arm_template.json.j2
        - ci/infra/jobs/build_amis/dw-al2-base-ami-arm.yml

  - name: dw-al2-concourse-ami-config
    .: (( inject meta.resources.ami-builder-configs ))
    source:
      paths:
        - dw-al2-concourse-ami/*
        - ci/infra/jobs/build_amis/dw-al2-concourse-ami.yml

  - name: dw-al2-concourse-ami-pr
    .: (( inject meta.resources.ami-builder-configs-pr ))
    source:
      paths:
        - dw-al2-concourse-ami/*
        - ci/infra/jobs/build_amis/dw-al2-concourse-ami.yml

  - name: dw-al2-ecs-ami-config
    .: (( inject meta.resources.ami-builder-configs ))
    source:
      paths:
        - dw-al2-ecs-ami/*
        - ci/infra/jobs/build_amis/dw-al2-ecs-ami.yml

  - name: dw-al2-ecs-ami-pr
    .: (( inject meta.resources.ami-builder-configs-pr ))
    source:
      paths:
        - dw-al2-ecs-ami/*
        - ci/infra/jobs/build_amis/dw-al2-ecs-ami.yml

  - name: dw-al2-hardened-ami-arm-config
    .: (( inject meta.resources.ami-builder-configs ))
    source:
      paths:
        - dw-al2-hardened-ami/*
        - ci/infra/jobs/build_amis/dw-al2-hardened-ami-arm.yml

  - name: dw-al2-hardened-ami-arm-pr
    .: (( inject meta.resources.ami-builder-configs-pr ))
    source:
      paths:
        - dw-al2-hardened-ami/*
        - ci/infra/jobs/build_amis/dw-al2-hardened-ami-arm.yml

  - name: dw-al2-kafka-ami-config
    .: (( inject meta.resources.ami-builder-configs ))
    source:
      paths:
        - dw-al2-kafka-ami/*
        - ci/infra/jobs/build_amis/dw-al2-kafka-ami.yml

  - name: dw-al2-kafka-ami-pr
    .: (( inject meta.resources.ami-builder-configs-pr ))
    source:
      paths:
        - dw-al2-kafka-ami/*
        - ci/infra/jobs/build_amis/dw-al2-kafka-ami.yml

  - name: dw-al2-nginx-ami-config
    .: (( inject meta.resources.ami-builder-configs ))
    source:
      paths:
        - dw-al2-nginx-ami/*
        - ci/infra/jobs/build_amis/dw-al2-nginx-ami.yml

  - name: dw-al2-nginx-ami-pr
    .: (( inject meta.resources.ami-builder-configs-pr ))
    source:
      paths:
        - dw-al2-nginx-ami/*
        - ci/infra/jobs/build_amis/dw-al2-nginx-ami.yml

  - name: concourse-release
    type: github-release
    source:
      owner: concourse
      repository: concourse
      access_token: ((dataworks-secrets.concourse_github_pat))
    check_every: 1h

  - name: weekly-wednesday
    source:
      start: 3:00 AM
      stop: 4:00 AM
      days: [Wednesday]
    type: time

  - name: slack
    type: slack-notification
    source:
      url: ((dataworks.slack_webhook_url))

  - name: base-ami-id
    type: file

  - name: hardened-ami-id
    type: file

  - name: emr-ami-id
    type: file

  - name: untested-dw-al2-emr-ami
    type: file

  - name: untested-dw-al2-hbase-ami
    type: file

  - name: ecs-ami-id
    type: file

  - name: untested-dw-al2-ecs-ami
    type: file

  - name: concourse-ami-id
    type: file

  - name: untested-dw-al2-concourse-ami
    type: file

  - name: kafka-ami-id
    type: file

  - name: untested-dw-al2-kafka-ami
    type: file

  - name: nginx-ami-id
    type: file

  - name: untested-dw-al2-nginx-ami
    type: file  
